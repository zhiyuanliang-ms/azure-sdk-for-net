// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the schema version properties. </summary>
    public partial class DeviceRegistrySchemaVersionProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceRegistrySchemaVersionProperties"/>. </summary>
        /// <param name="schemaContent"> Schema content. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="schemaContent"/> is null. </exception>
        public DeviceRegistrySchemaVersionProperties(string schemaContent)
        {
            Argument.AssertNotNull(schemaContent, nameof(schemaContent));

            SchemaContent = schemaContent;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistrySchemaVersionProperties"/>. </summary>
        /// <param name="uuid"> Globally unique, immutable, non-reusable id. </param>
        /// <param name="description"> Human-readable description of the schema. </param>
        /// <param name="schemaContent"> Schema content. </param>
        /// <param name="hash"> Hash of the schema content. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRegistrySchemaVersionProperties(string uuid, string description, string schemaContent, string hash, DeviceRegistryProvisioningState? provisioningState, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Uuid = uuid;
            Description = description;
            SchemaContent = schemaContent;
            Hash = hash;
            ProvisioningState = provisioningState;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Globally unique, immutable, non-reusable id. </summary>
        public string Uuid { get; }

        /// <summary> Human-readable description of the schema. </summary>
        public string Description { get; set; }

        /// <summary> Schema content. </summary>
        public string SchemaContent { get; set; }

        /// <summary> Hash of the schema content. </summary>
        public string Hash { get; }

        /// <summary> Provisioning state of the resource. </summary>
        public DeviceRegistryProvisioningState? ProvisioningState { get; }
    }
}
