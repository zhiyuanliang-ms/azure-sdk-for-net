// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines which device and endpoint to use for this asset. </summary>
    public partial class DeviceRef
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceRef"/>. </summary>
        /// <param name="deviceName"> Name of the device resource. </param>
        /// <param name="endpointName"> The name of endpoint to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="deviceName"/> or <paramref name="endpointName"/> is null. </exception>
        public DeviceRef(string deviceName, string endpointName)
        {
            Argument.AssertNotNull(deviceName, nameof(deviceName));
            Argument.AssertNotNull(endpointName, nameof(endpointName));

            DeviceName = deviceName;
            EndpointName = endpointName;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRef"/>. </summary>
        /// <param name="deviceName"> Name of the device resource. </param>
        /// <param name="endpointName"> The name of endpoint to use. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRef(string deviceName, string endpointName, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DeviceName = deviceName;
            EndpointName = endpointName;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of the device resource. </summary>
        public string DeviceName { get; set; }

        /// <summary> The name of endpoint to use. </summary>
        public string EndpointName { get; set; }
    }
}
