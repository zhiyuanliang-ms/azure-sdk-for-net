// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Device messaging endpoint model. </summary>
    public partial class DeviceMessagingEndpoint
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceMessagingEndpoint"/>. </summary>
        /// <param name="address"> The endpoint address to connect to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="address"/> is null. </exception>
        public DeviceMessagingEndpoint(string address)
        {
            Argument.AssertNotNull(address, nameof(address));

            Address = address;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceMessagingEndpoint"/>. </summary>
        /// <param name="endpointType"> Type of connection used for the messaging endpoint. </param>
        /// <param name="address"> The endpoint address to connect to. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceMessagingEndpoint(string endpointType, string address, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            EndpointType = endpointType;
            Address = address;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Type of connection used for the messaging endpoint. </summary>
        public string EndpointType { get; set; }

        /// <summary> The endpoint address to connect to. </summary>
        public string Address { get; set; }
    }
}
