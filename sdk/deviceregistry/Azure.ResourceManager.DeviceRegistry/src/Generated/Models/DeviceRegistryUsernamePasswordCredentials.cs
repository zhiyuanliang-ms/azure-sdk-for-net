// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> The credentials for authentication mode UsernamePassword. </summary>
    public partial class DeviceRegistryUsernamePasswordCredentials
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryUsernamePasswordCredentials"/>. </summary>
        /// <param name="usernameSecretName"> The name of the secret containing the username. </param>
        /// <param name="passwordSecretName"> The name of the secret containing the password. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="usernameSecretName"/> or <paramref name="passwordSecretName"/> is null. </exception>
        public DeviceRegistryUsernamePasswordCredentials(string usernameSecretName, string passwordSecretName)
        {
            Argument.AssertNotNull(usernameSecretName, nameof(usernameSecretName));
            Argument.AssertNotNull(passwordSecretName, nameof(passwordSecretName));

            UsernameSecretName = usernameSecretName;
            PasswordSecretName = passwordSecretName;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryUsernamePasswordCredentials"/>. </summary>
        /// <param name="usernameSecretName"> The name of the secret containing the username. </param>
        /// <param name="passwordSecretName"> The name of the secret containing the password. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRegistryUsernamePasswordCredentials(string usernameSecretName, string passwordSecretName, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            UsernameSecretName = usernameSecretName;
            PasswordSecretName = passwordSecretName;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the secret containing the username. </summary>
        public string UsernameSecretName { get; set; }

        /// <summary> The name of the secret containing the password. </summary>
        public string PasswordSecretName { get; set; }
    }
}
