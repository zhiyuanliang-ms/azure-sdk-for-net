// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> The updatable properties of the AssetEndpointProfile. </summary>
    public partial class AssetEndpointProfileUpdateProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AssetEndpointProfileUpdateProperties"/>. </summary>
        public AssetEndpointProfileUpdateProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AssetEndpointProfileUpdateProperties"/>. </summary>
        /// <param name="targetAddress"> The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration. </param>
        /// <param name="endpointProfileType"> Defines the configuration for the connector type that is being used with the endpoint profile. </param>
        /// <param name="authentication"> Defines the client authentication mechanism to the server. </param>
        /// <param name="additionalConfiguration"> Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF). </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AssetEndpointProfileUpdateProperties(Uri targetAddress, string endpointProfileType, DeviceRegistryAuthentication authentication, string additionalConfiguration, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            TargetAddress = targetAddress;
            EndpointProfileType = endpointProfileType;
            Authentication = authentication;
            AdditionalConfiguration = additionalConfiguration;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration. </summary>
        public Uri TargetAddress { get; set; }

        /// <summary> Defines the configuration for the connector type that is being used with the endpoint profile. </summary>
        public string EndpointProfileType { get; set; }

        /// <summary> Defines the client authentication mechanism to the server. </summary>
        public DeviceRegistryAuthentication Authentication { get; set; }

        /// <summary> Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF). </summary>
        public string AdditionalConfiguration { get; set; }
    }
}
