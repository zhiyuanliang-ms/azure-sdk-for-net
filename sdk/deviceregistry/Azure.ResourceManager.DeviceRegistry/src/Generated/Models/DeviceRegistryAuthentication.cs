// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Definition of the client authentication mechanism to the server. </summary>
    public partial class DeviceRegistryAuthentication
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryAuthentication"/>. </summary>
        /// <param name="method"> Defines the method to authenticate the user of the client at the server. </param>
        public DeviceRegistryAuthentication(AuthenticationMethod @method)
        {
            Method = @method;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryAuthentication"/>. </summary>
        /// <param name="method"> Defines the method to authenticate the user of the client at the server. </param>
        /// <param name="usernamePasswordCredentials"> Defines the username and password references when UsernamePassword user authentication mode is selected. </param>
        /// <param name="x509Credentials"> Defines the certificate reference when Certificate user authentication mode is selected. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRegistryAuthentication(AuthenticationMethod @method, DeviceRegistryUsernamePasswordCredentials usernamePasswordCredentials, DeviceRegistryX509Credentials x509Credentials, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Method = @method;
            UsernamePasswordCredentials = usernamePasswordCredentials;
            X509Credentials = x509Credentials;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Defines the method to authenticate the user of the client at the server. </summary>
        public AuthenticationMethod Method { get; set; }

        /// <summary> Defines the username and password references when UsernamePassword user authentication mode is selected. </summary>
        public DeviceRegistryUsernamePasswordCredentials UsernamePasswordCredentials { get; set; }

        /// <summary> Defines the certificate reference when Certificate user authentication mode is selected. </summary>
        internal DeviceRegistryX509Credentials X509Credentials { get; set; }

        /// <summary> The name of the secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx). </summary>
        public string X509CredentialsCertificateSecretName
        {
            get
            {
                return X509Credentials is null ? default : X509Credentials.CertificateSecretName;
            }
            set
            {
                X509Credentials = new DeviceRegistryX509Credentials(value);
            }
        }
    }
}
