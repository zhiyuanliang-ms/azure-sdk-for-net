// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the Asset Endpoint Profile properties. </summary>
    public partial class DeviceRegistryAssetEndpointProfileProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryAssetEndpointProfileProperties"/>. </summary>
        /// <param name="targetAddress"> The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration. </param>
        /// <param name="endpointProfileType"> Defines the configuration for the connector type that is being used with the endpoint profile. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetAddress"/> or <paramref name="endpointProfileType"/> is null. </exception>
        public DeviceRegistryAssetEndpointProfileProperties(Uri targetAddress, string endpointProfileType)
        {
            Argument.AssertNotNull(targetAddress, nameof(targetAddress));
            Argument.AssertNotNull(endpointProfileType, nameof(endpointProfileType));

            TargetAddress = targetAddress;
            EndpointProfileType = endpointProfileType;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryAssetEndpointProfileProperties"/>. </summary>
        /// <param name="uuid"> Globally unique, immutable, non-reusable id. </param>
        /// <param name="targetAddress"> The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration. </param>
        /// <param name="endpointProfileType"> Defines the configuration for the connector type that is being used with the endpoint profile. </param>
        /// <param name="authentication"> Defines the client authentication mechanism to the server. </param>
        /// <param name="additionalConfiguration"> Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF). </param>
        /// <param name="discoveredAssetEndpointProfileRef"> Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided. </param>
        /// <param name="status"> Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRegistryAssetEndpointProfileProperties(string uuid, Uri targetAddress, string endpointProfileType, DeviceRegistryAuthentication authentication, string additionalConfiguration, string discoveredAssetEndpointProfileRef, AssetEndpointProfileStatus status, DeviceRegistryProvisioningState? provisioningState, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Uuid = uuid;
            TargetAddress = targetAddress;
            EndpointProfileType = endpointProfileType;
            Authentication = authentication;
            AdditionalConfiguration = additionalConfiguration;
            DiscoveredAssetEndpointProfileRef = discoveredAssetEndpointProfileRef;
            Status = status;
            ProvisioningState = provisioningState;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Globally unique, immutable, non-reusable id. </summary>
        public string Uuid { get; }

        /// <summary> The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration. </summary>
        public Uri TargetAddress { get; set; }

        /// <summary> Defines the configuration for the connector type that is being used with the endpoint profile. </summary>
        public string EndpointProfileType { get; set; }

        /// <summary> Defines the client authentication mechanism to the server. </summary>
        public DeviceRegistryAuthentication Authentication { get; set; }

        /// <summary> Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF). </summary>
        public string AdditionalConfiguration { get; set; }

        /// <summary> Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided. </summary>
        public string DiscoveredAssetEndpointProfileRef { get; set; }

        /// <summary> Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources. </summary>
        internal AssetEndpointProfileStatus Status { get; }

        /// <summary> Provisioning state of the resource. </summary>
        public DeviceRegistryProvisioningState? ProvisioningState { get; }

        /// <summary> Array object to transfer and persist errors that originate from the Edge. </summary>
        public IReadOnlyList<AssetEndpointProfileStatusError> StatusErrors
        {
            get
            {
                return Status.Errors;
            }
        }
    }
}
