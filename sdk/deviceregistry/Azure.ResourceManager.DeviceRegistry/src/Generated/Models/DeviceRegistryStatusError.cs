// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the status config error properties. </summary>
    public partial class DeviceRegistryStatusError
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryStatusError"/>. </summary>
        internal DeviceRegistryStatusError()
        {
            Details = new ChangeTrackingList<DeviceRegistryErrorDetails>();
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryStatusError"/>. </summary>
        /// <param name="code"> Error code for classification of errors (ex: '400', '404', '500', etc.). </param>
        /// <param name="message"> Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”). </param>
        /// <param name="details"> Array of error details that describe the status of each error. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRegistryStatusError(string code, string message, IReadOnlyList<DeviceRegistryErrorDetails> details, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Code = code;
            Message = message;
            Details = details;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Error code for classification of errors (ex: '400', '404', '500', etc.). </summary>
        public string Code { get; }

        /// <summary> Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”). </summary>
        public string Message { get; }

        /// <summary> Array of error details that describe the status of each error. </summary>
        public IReadOnlyList<DeviceRegistryErrorDetails> Details { get; }
    }
}
