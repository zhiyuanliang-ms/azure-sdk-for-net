// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the discovered event group properties. </summary>
    public partial class NamespaceDiscoveredEventGroup
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="NamespaceDiscoveredEventGroup"/>. </summary>
        /// <param name="name"> The name of the event group. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public NamespaceDiscoveredEventGroup(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            DefaultDestinations = new ChangeTrackingList<EventDestination>();
            Events = new ChangeTrackingList<NamespaceDiscoveredEvent>();
        }

        /// <summary> Initializes a new instance of <see cref="NamespaceDiscoveredEventGroup"/>. </summary>
        /// <param name="name"> The name of the event group. </param>
        /// <param name="dataSource"> The address of the notifier of the event group in the asset (e.g. URL) so that a client can access the event group on the asset. </param>
        /// <param name="eventGroupConfiguration"> Stringified JSON that contains connector-specific configuration for the event group. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize. </param>
        /// <param name="defaultDestinations"> Destinations for events. Default destinations when destinations is not defined at the event level. </param>
        /// <param name="typeRef"> URI or type definition ID. </param>
        /// <param name="events"> Array of events that are part of the event group. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal NamespaceDiscoveredEventGroup(string name, string dataSource, string eventGroupConfiguration, IList<EventDestination> defaultDestinations, string typeRef, IList<NamespaceDiscoveredEvent> events, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            DataSource = dataSource;
            EventGroupConfiguration = eventGroupConfiguration;
            DefaultDestinations = defaultDestinations;
            TypeRef = typeRef;
            Events = events;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the event group. </summary>
        public string Name { get; set; }

        /// <summary> The address of the notifier of the event group in the asset (e.g. URL) so that a client can access the event group on the asset. </summary>
        public string DataSource { get; set; }

        /// <summary> Stringified JSON that contains connector-specific configuration for the event group. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize. </summary>
        public string EventGroupConfiguration { get; set; }

        /// <summary> Destinations for events. Default destinations when destinations is not defined at the event level. </summary>
        public IList<EventDestination> DefaultDestinations { get; }

        /// <summary> URI or type definition ID. </summary>
        public string TypeRef { get; set; }

        /// <summary> Array of events that are part of the event group. </summary>
        public IList<NamespaceDiscoveredEvent> Events { get; }
    }
}
