// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> The configuration for a MQTT destination. </summary>
    public partial class MqttDestinationConfiguration
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="MqttDestinationConfiguration"/>. </summary>
        /// <param name="topic"> The MQTT topic. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="topic"/> is null. </exception>
        public MqttDestinationConfiguration(string topic)
        {
            Argument.AssertNotNull(topic, nameof(topic));

            Topic = topic;
        }

        /// <summary> Initializes a new instance of <see cref="MqttDestinationConfiguration"/>. </summary>
        /// <param name="topic"> The MQTT topic. </param>
        /// <param name="retain"> When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'. </param>
        /// <param name="qos"> The MQTT QoS setting. Defaults to QoS 1. </param>
        /// <param name="ttl"> The MQTT TTL setting. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal MqttDestinationConfiguration(string topic, DeviceRegistryTopicRetainType? retain, MqttDestinationQo? qos, long? ttl, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Topic = topic;
            Retain = retain;
            Qos = qos;
            Ttl = ttl;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The MQTT topic. </summary>
        public string Topic { get; set; }

        /// <summary> When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'. </summary>
        public DeviceRegistryTopicRetainType? Retain { get; set; }

        /// <summary> The MQTT QoS setting. Defaults to QoS 1. </summary>
        public MqttDestinationQo? Qos { get; set; }

        /// <summary> The MQTT TTL setting. </summary>
        public long? Ttl { get; set; }
    }
}
