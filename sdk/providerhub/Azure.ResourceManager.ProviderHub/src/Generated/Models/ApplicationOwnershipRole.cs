// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ProviderHub.Models
{
    /// <summary> The ownership role the application has on the resource types. The service owner role gives the application owner permissions. The limited owner role gives elevated permissions but does not allow all the permissions of a service owner, such as read/write on internal metadata. </summary>
    public readonly partial struct ApplicationOwnershipRole : IEquatable<ApplicationOwnershipRole>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ApplicationOwnershipRole"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ApplicationOwnershipRole(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ServiceOwnerValue = "ServiceOwner";
        private const string LimitedOwnerValue = "LimitedOwner";

        /// <summary> ServiceOwner. </summary>
        public static ApplicationOwnershipRole ServiceOwner { get; } = new ApplicationOwnershipRole(ServiceOwnerValue);
        /// <summary> LimitedOwner. </summary>
        public static ApplicationOwnershipRole LimitedOwner { get; } = new ApplicationOwnershipRole(LimitedOwnerValue);
        /// <summary> Determines if two <see cref="ApplicationOwnershipRole"/> values are the same. </summary>
        public static bool operator ==(ApplicationOwnershipRole left, ApplicationOwnershipRole right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ApplicationOwnershipRole"/> values are not the same. </summary>
        public static bool operator !=(ApplicationOwnershipRole left, ApplicationOwnershipRole right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ApplicationOwnershipRole"/>. </summary>
        public static implicit operator ApplicationOwnershipRole(string value) => new ApplicationOwnershipRole(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ApplicationOwnershipRole other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ApplicationOwnershipRole other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
