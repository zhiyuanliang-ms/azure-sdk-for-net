// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the stream properties. </summary>
    public partial class NamespaceStream
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="NamespaceStream"/>. </summary>
        /// <param name="name"> Name of the stream definition. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public NamespaceStream(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            Destinations = new ChangeTrackingList<StreamDestination>();
        }

        /// <summary> Initializes a new instance of <see cref="NamespaceStream"/>. </summary>
        /// <param name="name"> Name of the stream definition. </param>
        /// <param name="streamConfiguration"> Stringified JSON that contains connector-specific configuration for the specific stream. </param>
        /// <param name="typeRef"> URI or type definition ID. </param>
        /// <param name="destinations"> Destinations for a stream. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal NamespaceStream(string name, string streamConfiguration, string typeRef, IList<StreamDestination> destinations, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            StreamConfiguration = streamConfiguration;
            TypeRef = typeRef;
            Destinations = destinations;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of the stream definition. </summary>
        public string Name { get; set; }

        /// <summary> Stringified JSON that contains connector-specific configuration for the specific stream. </summary>
        public string StreamConfiguration { get; set; }

        /// <summary> URI or type definition ID. </summary>
        public string TypeRef { get; set; }

        /// <summary> Destinations for a stream. </summary>
        public IList<StreamDestination> Destinations { get; }
    }
}
