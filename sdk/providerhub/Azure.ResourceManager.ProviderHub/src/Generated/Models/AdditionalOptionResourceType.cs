// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ProviderHub.Models
{
    /// <summary> The additional options. </summary>
    public readonly partial struct AdditionalOptionResourceType : IEquatable<AdditionalOptionResourceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AdditionalOptionResourceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AdditionalOptionResourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ProtectedAsyncOperationPollingValue = "ProtectedAsyncOperationPolling";
        private const string ProtectedAsyncOperationPollingAuditOnlyValue = "ProtectedAsyncOperationPollingAuditOnly";

        /// <summary> ProtectedAsyncOperationPolling. </summary>
        public static AdditionalOptionResourceType ProtectedAsyncOperationPolling { get; } = new AdditionalOptionResourceType(ProtectedAsyncOperationPollingValue);
        /// <summary> ProtectedAsyncOperationPollingAuditOnly. </summary>
        public static AdditionalOptionResourceType ProtectedAsyncOperationPollingAuditOnly { get; } = new AdditionalOptionResourceType(ProtectedAsyncOperationPollingAuditOnlyValue);
        /// <summary> Determines if two <see cref="AdditionalOptionResourceType"/> values are the same. </summary>
        public static bool operator ==(AdditionalOptionResourceType left, AdditionalOptionResourceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AdditionalOptionResourceType"/> values are not the same. </summary>
        public static bool operator !=(AdditionalOptionResourceType left, AdditionalOptionResourceType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="AdditionalOptionResourceType"/>. </summary>
        public static implicit operator AdditionalOptionResourceType(string value) => new AdditionalOptionResourceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AdditionalOptionResourceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AdditionalOptionResourceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
