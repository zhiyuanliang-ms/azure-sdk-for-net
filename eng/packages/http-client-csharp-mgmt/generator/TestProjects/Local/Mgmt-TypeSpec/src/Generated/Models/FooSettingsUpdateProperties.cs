// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Generator.MgmtTypeSpec.Tests;

namespace Azure.Generator.MgmtTypeSpec.Tests.Models
{
    /// <summary> The updatable properties of the FooSettings. </summary>
    public partial class FooSettingsUpdateProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="FooSettingsUpdateProperties"/>. </summary>
        public FooSettingsUpdateProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="FooSettingsUpdateProperties"/>. </summary>
        /// <param name="marketplace"> Marketplace details of the resource. </param>
        /// <param name="user"> Details of the user. </param>
        /// <param name="accessControlEnabled"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal FooSettingsUpdateProperties(MarketplaceDetails marketplace, UserDetails user, bool? accessControlEnabled, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Marketplace = marketplace;
            User = user;
            AccessControlEnabled = accessControlEnabled;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Marketplace details of the resource. </summary>
        [WirePath("marketplace")]
        public MarketplaceDetails Marketplace { get; set; }

        /// <summary> Details of the user. </summary>
        [WirePath("user")]
        public UserDetails User { get; set; }

        /// <summary> Gets or sets the AccessControlEnabled. </summary>
        [WirePath("accessControlEnabled")]
        public bool? AccessControlEnabled { get; set; }
    }
}
