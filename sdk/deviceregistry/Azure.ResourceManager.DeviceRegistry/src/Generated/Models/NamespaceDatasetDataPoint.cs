// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Defines the dataset data point properties. </summary>
    public partial class NamespaceDatasetDataPoint
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="NamespaceDatasetDataPoint"/>. </summary>
        /// <param name="name"> The name of the data point. </param>
        /// <param name="dataSource"> The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="dataSource"/> is null. </exception>
        public NamespaceDatasetDataPoint(string name, string dataSource)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(dataSource, nameof(dataSource));

            Name = name;
            DataSource = dataSource;
        }

        /// <summary> Initializes a new instance of <see cref="NamespaceDatasetDataPoint"/>. </summary>
        /// <param name="name"> The name of the data point. </param>
        /// <param name="dataSource"> The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset. </param>
        /// <param name="dataPointConfiguration"> Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize. </param>
        /// <param name="typeRef"> URI or type definition ID. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal NamespaceDatasetDataPoint(string name, string dataSource, string dataPointConfiguration, string typeRef, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            DataSource = dataSource;
            DataPointConfiguration = dataPointConfiguration;
            TypeRef = typeRef;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the data point. </summary>
        public string Name { get; set; }

        /// <summary> The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset. </summary>
        public string DataSource { get; set; }

        /// <summary> Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize. </summary>
        public string DataPointConfiguration { get; set; }

        /// <summary> URI or type definition ID. </summary>
        public string TypeRef { get; set; }
    }
}
