// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.DeviceRegistry;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> Connection endpoint URL a device can use to connect to a service. </summary>
    public partial class DiscoveredMessagingEndpoints
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DiscoveredMessagingEndpoints"/>. </summary>
        public DiscoveredMessagingEndpoints()
        {
            Inbound = new ChangeTrackingDictionary<string, DiscoveredInboundEndpoints>();
        }

        /// <summary> Initializes a new instance of <see cref="DiscoveredMessagingEndpoints"/>. </summary>
        /// <param name="inbound"> Set of endpoints to connect to the device. </param>
        /// <param name="outbound"> Set of endpoints a device can connect to. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DiscoveredMessagingEndpoints(IDictionary<string, DiscoveredInboundEndpoints> inbound, DiscoveredOutboundEndpoints outbound, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Inbound = inbound;
            Outbound = outbound;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Set of endpoints to connect to the device. </summary>
        public IDictionary<string, DiscoveredInboundEndpoints> Inbound { get; }

        /// <summary> Set of endpoints a device can connect to. </summary>
        internal DiscoveredOutboundEndpoints Outbound { get; set; }

        /// <summary> Endpoints the device can connect to. </summary>
        public IDictionary<string, DeviceMessagingEndpoint> OutboundAssigned
        {
            get
            {
                return Outbound is null ? default : Outbound.Assigned;
            }
            set
            {
                Outbound = new DiscoveredOutboundEndpoints(value);
            }
        }
    }
}
