// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceRegistry.Models
{
    /// <summary> The namespace properties model. </summary>
    public partial class DeviceRegistryNamespaceProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryNamespaceProperties"/>. </summary>
        public DeviceRegistryNamespaceProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DeviceRegistryNamespaceProperties"/>. </summary>
        /// <param name="uuid"> Globally unique, immutable, non-reusable ID. </param>
        /// <param name="messaging"> Assigned and unassigned messaging endpoints. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeviceRegistryNamespaceProperties(string uuid, Messaging messaging, DeviceRegistryProvisioningState? provisioningState, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Uuid = uuid;
            Messaging = messaging;
            ProvisioningState = provisioningState;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Globally unique, immutable, non-reusable ID. </summary>
        public string Uuid { get; }

        /// <summary> Assigned and unassigned messaging endpoints. </summary>
        internal Messaging Messaging { get; set; }

        /// <summary> Provisioning state of the resource. </summary>
        public DeviceRegistryProvisioningState? ProvisioningState { get; }

        /// <summary> Dictionary of messaging endpoints. </summary>
        public IDictionary<string, MessagingEndpoint> MessagingEndpoints
        {
            get
            {
                if (Messaging is null)
                {
                    Messaging = new Messaging();
                }
                return Messaging.Endpoints;
            }
        }
    }
}
